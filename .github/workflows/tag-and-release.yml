name: Publish

on:
  push:
    branches:
      - main

jobs:
  publish-macos:
    runs-on: macos-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Check out Expo repository
        run: |
          git clone https://github.com/wcpos/managed-expo.git expo
          touch expo/yarn.lock

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Expo dependencies
        run: |
          cd expo
          YARN_ENABLE_IMMUTABLE_INSTALLS=false yarn install

      - name: Run Expo export
        run: |
          cd expo
          yarn export:electron

      - name: Move Expo 'dist' directory
        run: mv expo/dist .

      - name: Install Certificates
        run: |
          mkdir -p /tmp/certs
          echo "${{ secrets.MAC_CERTS }}" | base64 -d > /tmp/certs/certs.p12
          echo "${{ secrets.MAC_CERTS_PASSWORD }}" > /tmp/certs/certs-password.txt
          security create-keychain -p actions /tmp/certs/keychain-db
          security default-keychain -s /tmp/certs/keychain-db
          security import /tmp/certs/certs.p12 -k /tmp/certs/keychain-db -P $(cat /tmp/certs/certs-password.txt) -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k actions /tmp/certs/keychain-db

      - name: Install and build
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASS }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          yarn install
          yarn make

      - name: Publish macOS release
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASS }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn publish-app

  publish-windows:
    runs-on: windows-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Check out Expo repository
        run: |
          git clone https://github.com/wcpos/managed-expo.git expo
          touch expo/yarn.lock

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Expo dependencies
        run: |
          cd expo
          $env:YARN_ENABLE_IMMUTABLE_INSTALLS="false"; yarn install

      - name: Run Expo export
        run: |
          cd expo
          yarn export:electron

      - name: Move Expo 'dist' directory
        run: mv expo/dist .

      - name: Install and build
        run: |
          yarn install
          yarn make

      - name: Publish Windows release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn publish-app

  publish-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Check out Expo repository
        run: |
          git clone https://github.com/wcpos/managed-expo.git expo
          touch expo/yarn.lock

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Expo dependencies
        run: |
          cd expo
          YARN_ENABLE_IMMUTABLE_INSTALLS=false yarn install

      - name: Run Expo export
        run: |
          cd expo
          yarn export:electron

      - name: Move Expo 'dist' directory
        run: mv expo/dist .

      - name: Install and build
        run: |
          yarn install
          yarn make

      - name: Publish Linux release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn publish-app
